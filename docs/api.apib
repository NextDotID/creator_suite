FORMAT: 1A
HOST: https://xxx

# CreatorSuite

CreatorSuite Service provides create and get api to distribute content asset for both creators and buyers.

## Create Content Asset [/create]

### Create a Content Asset [post]

 + Attributes (object)
    + managed_contract (string, required) - the contract that received the tokens
    + network (string, required) - interact network.
    + payment_token_address (string, required) - which token and how much it cost to unlock the content
    + payment_token_amount (string, required) - same as above
    + encryption_type (string, required) - encryption_type=1 symmetric encryption option, encryption_type=2 asymmetric encryption
    + password (string, optional) - depends on encryption_type. If encryption_type=1, use it encryption/decryption the content; if encryption_type=2, keep it empty.
    + file_extension (string, required) - record the file extension for decryption process
    + description (string, optional) - description of the content

+ Request (application/json)

        {
            "managed_contract": "0x3A6c014579583c5D412A9F3914a67C0885dB90c0",
            "network":"mumbai",
            "payment_token_address": "0x9801ca34B280b60292692E3fD00599f0Fbb8d6b2",
            "payment_token_amount": "5" ,
            "password": "1234567890qwertq",
            "encryption_type":1,
            "file_extension":"jpg"
        }


+ Response 200 (application/json)

    {}

## Get a Specific Asset [/get-content]
### get a content asset [get]

After paying for a specific content asset, the buyer can call the get-content api to get the encrypted content asset

+ Parameters
    + public_key(string) - the public key of the account that make the payment of content asset
    + content_id(number) - the content asset ID

+ Response 200 (application/json)

    + Body

        {
            "encrypted_password": "",
            "encrypted_result": "",
            "encryption_type": 1, //encryption_type=1 symmetric encryption option, encryption_type=2 asymmetric encryption
            "file_extension": "jpg"
        }

## Get file list of contents [/file/list]
### get the list of the contents that created already [post]

List the contents

+ Attributes (object)
    + path (string, required) - the storage path of the content

+ Response 200 (application/json)

    + Body

        {
            "folders": [
                {
                    "name": "22",
                    "type": "dirs",
                    "path": "/storage/22",
                    "created_time": "2023-02-02 06:25:16",
                    "update_time": "2023-02-02 06:25:16",
                    "content_id": 22,
                    "children": [
                        {
                            "name": "result.jpeg",
                            "type": "localfile",
                            "size": "56.46KB",
                            "extension": "jpeg",
                            "path": "/storage/22/result.jpeg",
                            "content_id": 0,
                            "managed_contract": "",
                            "asset_id": 0,
                            "key_id": 0,
                            "location_url": "",
                            "created_time": "2023-02-02 06:25:16",
                            "update_time": "2023-02-02 06:25:16"
                        }
                    ]
                }
            ],
            "files": [
                {
                    "name": "result.jpeg",
                    "type": "localfile",
                    "size": "56.46KB",
                    "extension": "jpeg",
                    "path": "/storage/result.jpeg",
                    "content_id": 0,
                    "managed_contract": "",
                    "asset_id": 0,
                    "key_id": 0,
                    "location_url": "",
                    "created_time": "2023-02-02 06:22:56",
                    "update_time": "2023-02-02 06:22:56"
                }
            ]
        }
